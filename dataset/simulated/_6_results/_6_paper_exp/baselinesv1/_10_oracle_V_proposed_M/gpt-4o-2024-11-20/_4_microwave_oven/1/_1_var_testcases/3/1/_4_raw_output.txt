variable list files available
Feature list already exists at /data/home/jian/TextToActions/datasetv2/simulated/_6_results/_6_paper_exp/baselinesv1/_10_oracle_V_proposed_M/gpt-4o-2024-11-20/_4_microwave_oven/1/_0_reasoning/_3_proposed_feature_list.py
World model already exists at /data/home/jian/TextToActions/datasetv2/simulated/_6_results/_6_paper_exp/baselinesv1/_10_oracle_V_proposed_M/gpt-4o-2024-11-20/_4_microwave_oven/1/_0_reasoning/_4_proposed_world_model.py. Skipping...
processing:  _4_microwave_oven 1 var 2
processing:  _4_microwave_oven 1 2
trial:  1
setting agnostic
initial appliance state:  variable_beverage_setting: 1
variable_child_lock: unlocked
variable_clock: 00:00:00
variable_dinner_plate_setting: 9.0
variable_frozen_vegetable_setting: 4.0
variable_kitchen_timer: 00:00:00
variable_microwave_cooking_time: 00:00:00
variable_microwave_power_level: PL10
variable_pizza_setting: 4.0
variable_popcorn_setting: 1.75
variable_potato_setting: 1
variable_start_running: off
variable_time_defrost: 00:00:00
variable_weight_defrost: 0

current_state_simulator when it is just created: 

 variable_child_lock: unlocked
variable_clock: 00:00:00
variable_menu_index: popcorn
variable_menu_setting_beverage: 1
variable_menu_setting_dinner_plate: 9.0
variable_menu_setting_frozen_vegetable: 4.0
variable_menu_setting_pizza: 4.0
variable_menu_setting_popcorn: 1.75
variable_menu_setting_potato: 1
variable_power: PL10
variable_start_running: off
variable_time_cook_time: 00:00:00
variable_time_defrost: 00:00:01
variable_timer: 00:00:00
variable_weight_defrost: 4

goal state:  variable_child_lock: unlocked
variable_clock: 00:00:00
variable_menu_index: popcorn
variable_menu_setting_beverage: 1
variable_menu_setting_dinner_plate: 9.0
variable_menu_setting_frozen_vegetable: 4.0
variable_menu_setting_pizza: 4.0
variable_menu_setting_popcorn: 1.75
variable_menu_setting_potato: 1
variable_power: PL8
variable_start_running: on
variable_time_cook_time: 00:06:00
variable_time_defrost: 00:00:01
variable_timer: 00:00:00
variable_weight_defrost: 4
current feature:  set_microwave_cook_time_power
step_info:  {'step': 1, 'actions': ['press_time_cook_button']}
executing action: ('press_time_cook_button', 1)
step_info:  {'step': 2, 'actions': ['press_number_1_button', 'press_number_2_button', 'press_number_3_button', 'press_number_4_button', 'press_number_5_button', 'press_number_6_button', 'press_number_7_button', 'press_number_8_button', 'press_number_9_button', 'press_number_0_button'], 'variable': 'variable_time_cook_time', 'comment': 'requires parsing from variable_input_string'}
goal state string:  We want to have the variable: variable_time_cook_time to have a value of 00:06:00. 
goal_state_simulator: variable_child_lock: unlocked
variable_clock: 00:00:00
variable_menu_index: popcorn
variable_menu_setting_beverage: 1
variable_menu_setting_dinner_plate: 9.0
variable_menu_setting_frozen_vegetable: 4.0
variable_menu_setting_pizza: 4.0
variable_menu_setting_popcorn: 1.75
variable_menu_setting_potato: 1
variable_power: PL10
variable_start_running: off
variable_time_cook_time: 00:06:00
variable_time_defrost: 00:00:01
variable_timer: 00:00:00
variable_weight_defrost: 4
current_state_simulator: variable_child_lock: unlocked
variable_clock: 00:00:00
variable_menu_index: popcorn
variable_menu_setting_beverage: 1
variable_menu_setting_dinner_plate: 9.0
variable_menu_setting_frozen_vegetable: 4.0
variable_menu_setting_pizza: 4.0
variable_menu_setting_popcorn: 1.75
variable_menu_setting_potato: 1
variable_power: PL10
variable_start_running: off
variable_time_cook_time: 00:00:00
variable_time_defrost: 00:00:01
variable_timer: 00:00:00
variable_weight_defrost: 4
variable_name: variable_time_cook_time
actions: ['press_number_1_button', 'press_number_2_button', 'press_number_3_button', 'press_number_4_button', 'press_number_5_button', 'press_number_6_button', 'press_number_7_button', 'press_number_8_button', 'press_number_9_button', 'press_number_0_button']
astarsearch: <class 'AStarSearch'>
goal string: 600, goal variable value: 00:06:00, variable_name: variable_time_cook_time, feature name: set_microwave_cook_time_power
output actions list: ['press_number_6_button', 'press_number_0_button', 'press_number_0_button']
planning_result:  [('press_number_6_button', 1), ('press_number_0_button', 2)]
feedbacks:  ["applied action: ('press_time_cook_button', 1), feedback: {'feature': ('microwave_cook', 1), 'variable_microwave_cooking_time': '00:00:00'}", "applied action: ('press_number_6_button', 1), feedback: {'feature': ('microwave_cook', 2), 'variable_microwave_cooking_time': '00:00:06'}", "applied action: ('press_number_0_button', 2), feedback: {'feature': ('microwave_cook', 2), 'variable_microwave_cooking_time': '00:06:00'}"]
check state....
Feedback Variable: 

 variable_microwave_cooking_time: 00:06:00 


Comparison result: 

 reason = "The goal state requires 'variable_time_cook_time' to be '00:06:00', and the feedback shows 'variable_microwave_cooking_time' as '00:06:00'. Both represent the same variable and the values match exactly. Thus, the goal state is achieved for this variable."
goal_reached = True 


goal state reached: True
step_info:  {'step': 3, 'actions': ['press_power_button']}
executing action: ('press_power_button', 1)
step_info:  {'step': 4, 'actions': ['press_number_1_button', 'press_number_2_button', 'press_number_3_button', 'press_number_4_button', 'press_number_5_button', 'press_number_6_button', 'press_number_7_button', 'press_number_8_button', 'press_number_9_button', 'press_number_0_button'], 'variable': 'variable_power'}
goal state string:  We want to have the variable: variable_power to have a value of PL8. 
goal_state_simulator: variable_child_lock: unlocked
variable_clock: 00:00:00
variable_menu_index: popcorn
variable_menu_setting_beverage: 1
variable_menu_setting_dinner_plate: 9.0
variable_menu_setting_frozen_vegetable: 4.0
variable_menu_setting_pizza: 4.0
variable_menu_setting_popcorn: 1.75
variable_menu_setting_potato: 1
variable_power: PL8
variable_start_running: off
variable_time_cook_time: 00:06:00
variable_time_defrost: 00:00:01
variable_timer: 00:00:00
variable_weight_defrost: 4
current_state_simulator: variable_child_lock: unlocked
variable_clock: 00:00:00
variable_menu_index: popcorn
variable_menu_setting_beverage: 1
variable_menu_setting_dinner_plate: 9.0
variable_menu_setting_frozen_vegetable: 4.0
variable_menu_setting_pizza: 4.0
variable_menu_setting_popcorn: 1.75
variable_menu_setting_potato: 1
variable_power: PL10
variable_start_running: off
variable_time_cook_time: 00:06:00
variable_time_defrost: 00:00:01
variable_timer: 00:00:00
variable_weight_defrost: 4
variable_name: variable_power
actions: ['press_number_1_button', 'press_number_2_button', 'press_number_3_button', 'press_number_4_button', 'press_number_5_button', 'press_number_6_button', 'press_number_7_button', 'press_number_8_button', 'press_number_9_button', 'press_number_0_button']
astarsearch: <class 'AStarSearch'>
goal string: 8, goal variable value: PL8, variable_name: variable_power, feature name: set_microwave_cook_time_power
output actions list: ['press_number_8_button']
planning_result:  [('press_number_8_button', 1)]
feedbacks:  ["applied action: ('press_number_0_button', 2), feedback: {'feature': ('microwave_cook', 2), 'variable_microwave_cooking_time': '00:06:00'}", "applied action: ('press_power_button', 1), feedback: {'feature': ('microwave_cook', 3), 'variable_microwave_cooking_time': '00:06:00', 'variable_microwave_power_level': 'PL10'}", "applied action: ('press_number_8_button', 1), feedback: {'feature': ('microwave_cook', 4), 'variable_microwave_power_level': 'PL8', 'variable_start_running': 'off'}"]
check state....
Feedback Variable: 

 variable_microwave_power_level: pl8 


Comparison result: 

 reason = "The feedback shows 'variable_microwave_power_level' as 'pl8', which matches the goal state's 'variable_power' value of 'PL8'. The comparison is case-insensitive and the values are semantically the same."
goal_reached = True 


goal state reached: True
step_info:  {'step': 5, 'actions': ['press_start_plus_30sec_button'], 'variable': 'variable_start_running', 'comment': 'value always set to on'}
executing action: ('press_start_plus_30sec_button', 1)
goal state string:  We want to have the variable: variable_start_running to have a value of on. 
goal_state_simulator: variable_child_lock: unlocked
variable_clock: 00:00:00
variable_menu_index: popcorn
variable_menu_setting_beverage: 1
variable_menu_setting_dinner_plate: 9.0
variable_menu_setting_frozen_vegetable: 4.0
variable_menu_setting_pizza: 4.0
variable_menu_setting_popcorn: 1.75
variable_menu_setting_potato: 1
variable_power: PL8
variable_start_running: on
variable_time_cook_time: 00:06:00
variable_time_defrost: 00:00:01
variable_timer: 00:00:00
variable_weight_defrost: 4
current_state_simulator: variable_child_lock: unlocked
variable_clock: 00:00:00
variable_menu_index: popcorn
variable_menu_setting_beverage: 1
variable_menu_setting_dinner_plate: 9.0
variable_menu_setting_frozen_vegetable: 4.0
variable_menu_setting_pizza: 4.0
variable_menu_setting_popcorn: 1.75
variable_menu_setting_potato: 1
variable_power: PL8
variable_start_running: on
variable_time_cook_time: 00:06:00
variable_time_defrost: 00:00:01
variable_timer: 00:00:00
variable_weight_defrost: 4
variable_name: variable_start_running
actions: ['press_start_plus_30sec_button']
astarsearch: <class 'AStarSearch'>
planning_result:  []
feedbacks:  ["applied action: ('press_power_button', 1), feedback: {'feature': ('microwave_cook', 3), 'variable_microwave_cooking_time': '00:06:00', 'variable_microwave_power_level': 'PL10'}", "applied action: ('press_number_8_button', 1), feedback: {'feature': ('microwave_cook', 4), 'variable_microwave_power_level': 'PL8', 'variable_start_running': 'off'}", "applied action: ('press_start_plus_30sec_button', 1), feedback: {'feature': ('microwave_cook', 5), 'variable_start_running': 'on', 'variable_microwave_power_level': 'PL8'}"]
check state....
Feedback Variable: 

 variable_start_running: on 


Comparison result: 

 reason = "The goal state requires the variable 'variable_start_running' to have a value of 'on'. The feedback also shows 'variable_start_running' with a value of 'on'. Since the values are identical and match exactly, the goal is achieved."
goal_reached = True 


goal state reached: True
ground truth info {'id': 2, 'command': 'Use time cooking setting to cook at 80% power for 6 minutes. Then start the appliance.', 'target_state': {'variable_clock': '00:00:00', 'variable_kitchen_timer': '00:00:00', 'variable_microwave_cooking_time': '06:00:00', 'variable_microwave_power_level': 'PL8', 'variable_weight_defrost': 0, 'variable_time_defrost': '00:00:00', 'variable_popcorn_setting': 1.75, 'variable_potato_setting': 1, 'variable_frozen_vegetable_setting': 4.0, 'variable_beverage_setting': 1, 'variable_dinner_plate_setting': 9.0, 'variable_pizza_setting': 4.0, 'variable_child_lock': 'unlocked', 'variable_start_running': 'on'}, 'important_target_states': {'variable_microwave_cooking_time': '00:06:00', 'variable_microwave_power_level': 'PL8', 'variable_start_running': 'on'}}
robot's decision {'variable_beverage_setting': '1', 'variable_child_lock': 'unlocked', 'variable_clock': '00:00:00', 'variable_dinner_plate_setting': '9.0', 'variable_frozen_vegetable_setting': '4.0', 'variable_kitchen_timer': '00:00:00', 'variable_microwave_cooking_time': '00:06:00', 'variable_microwave_power_level': 'PL8', 'variable_pizza_setting': '4.0', 'variable_popcorn_setting': '1.75', 'variable_potato_setting': '1', 'variable_start_running': 'on', 'variable_time_defrost': '00:00:00', 'variable_weight_defrost': 0}
processing:  _4_microwave_oven 1 var 3
processing:  _4_microwave_oven 1 3
trial:  1
setting agnostic
initial appliance state:  variable_beverage_setting: 1
variable_child_lock: unlocked
variable_clock: 00:00:00
variable_dinner_plate_setting: 9.0
variable_frozen_vegetable_setting: 4.0
variable_kitchen_timer: 00:00:00
variable_microwave_cooking_time: 00:00:00
variable_microwave_power_level: PL10
variable_pizza_setting: 4.0
variable_popcorn_setting: 1.75
variable_potato_setting: 1
variable_start_running: off
variable_time_defrost: 00:00:00
variable_weight_defrost: 0

current_state_simulator when it is just created: 

 variable_child_lock: unlocked
variable_clock: 00:00:00
variable_menu_index: popcorn
variable_menu_setting_beverage: 1
variable_menu_setting_dinner_plate: 9.0
variable_menu_setting_frozen_vegetable: 4.0
variable_menu_setting_pizza: 4.0
variable_menu_setting_popcorn: 1.75
variable_menu_setting_potato: 1
variable_power: PL10
variable_start_running: off
variable_time_cook_time: 00:00:00
variable_time_defrost: 00:00:01
variable_timer: 00:00:00
variable_weight_defrost: 4

goal state:  variable_child_lock: unlocked
variable_clock: 00:00:00
variable_menu_index: popcorn
variable_menu_setting_beverage: 1
variable_menu_setting_dinner_plate: 9.0
variable_menu_setting_frozen_vegetable: 4.0
variable_menu_setting_pizza: 4.0
variable_menu_setting_popcorn: 1.75
variable_menu_setting_potato: 1
variable_power: PL7
variable_start_running: on
variable_time_cook_time: 00:05:00
variable_time_defrost: 00:00:01
variable_timer: 00:00:00
variable_weight_defrost: 4
current feature:  set_microwave_cook_time_power
step_info:  {'step': 1, 'actions': ['press_time_cook_button']}
executing action: ('press_time_cook_button', 1)
step_info:  {'step': 2, 'actions': ['press_number_1_button', 'press_number_2_button', 'press_number_3_button', 'press_number_4_button', 'press_number_5_button', 'press_number_6_button', 'press_number_7_button', 'press_number_8_button', 'press_number_9_button', 'press_number_0_button'], 'variable': 'variable_time_cook_time', 'comment': 'requires parsing from variable_input_string'}
goal state string:  We want to have the variable: variable_time_cook_time to have a value of 00:05:00. 
goal_state_simulator: variable_child_lock: unlocked
variable_clock: 00:00:00
variable_menu_index: popcorn
variable_menu_setting_beverage: 1
variable_menu_setting_dinner_plate: 9.0
variable_menu_setting_frozen_vegetable: 4.0
variable_menu_setting_pizza: 4.0
variable_menu_setting_popcorn: 1.75
variable_menu_setting_potato: 1
variable_power: PL10
variable_start_running: off
variable_time_cook_time: 00:05:00
variable_time_defrost: 00:00:01
variable_timer: 00:00:00
variable_weight_defrost: 4
current_state_simulator: variable_child_lock: unlocked
variable_clock: 00:00:00
variable_menu_index: popcorn
variable_menu_setting_beverage: 1
variable_menu_setting_dinner_plate: 9.0
variable_menu_setting_frozen_vegetable: 4.0
variable_menu_setting_pizza: 4.0
variable_menu_setting_popcorn: 1.75
variable_menu_setting_potato: 1
variable_power: PL10
variable_start_running: off
variable_time_cook_time: 00:00:00
variable_time_defrost: 00:00:01
variable_timer: 00:00:00
variable_weight_defrost: 4
variable_name: variable_time_cook_time
actions: ['press_number_1_button', 'press_number_2_button', 'press_number_3_button', 'press_number_4_button', 'press_number_5_button', 'press_number_6_button', 'press_number_7_button', 'press_number_8_button', 'press_number_9_button', 'press_number_0_button']
astarsearch: <class 'AStarSearch'>
goal string: 500, goal variable value: 00:05:00, variable_name: variable_time_cook_time, feature name: set_microwave_cook_time_power
output actions list: ['press_number_5_button', 'press_number_0_button', 'press_number_0_button']
planning_result:  [('press_number_5_button', 1), ('press_number_0_button', 2)]
feedbacks:  ["applied action: ('press_time_cook_button', 1), feedback: {'feature': ('microwave_cook', 1), 'variable_microwave_cooking_time': '00:00:00'}", "applied action: ('press_number_5_button', 1), feedback: {'feature': ('microwave_cook', 2), 'variable_microwave_cooking_time': '00:00:05'}", "applied action: ('press_number_0_button', 2), feedback: {'feature': ('microwave_cook', 2), 'variable_microwave_cooking_time': '00:05:00'}"]
check state....
Feedback Variable: 

 variable_microwave_cooking_time: 00:05:00 


Comparison result: 

 reason = "The goal state requires 'variable_time_cook_time' to be '00:05:00'. The feedback shows 'variable_microwave_cooking_time' as '00:05:00'. Both variables represent the same item, and the values are identical in both formatting and meaning. Therefore, the goal has been achieved."
goal_reached = True 


goal state reached: True
step_info:  {'step': 3, 'actions': ['press_power_button']}
executing action: ('press_power_button', 1)
step_info:  {'step': 4, 'actions': ['press_number_1_button', 'press_number_2_button', 'press_number_3_button', 'press_number_4_button', 'press_number_5_button', 'press_number_6_button', 'press_number_7_button', 'press_number_8_button', 'press_number_9_button', 'press_number_0_button'], 'variable': 'variable_power'}
goal state string:  We want to have the variable: variable_power to have a value of PL7. 
goal_state_simulator: variable_child_lock: unlocked
variable_clock: 00:00:00
variable_menu_index: popcorn
variable_menu_setting_beverage: 1
variable_menu_setting_dinner_plate: 9.0
variable_menu_setting_frozen_vegetable: 4.0
variable_menu_setting_pizza: 4.0
variable_menu_setting_popcorn: 1.75
variable_menu_setting_potato: 1
variable_power: PL7
variable_start_running: off
variable_time_cook_time: 00:05:00
variable_time_defrost: 00:00:01
variable_timer: 00:00:00
variable_weight_defrost: 4
current_state_simulator: variable_child_lock: unlocked
variable_clock: 00:00:00
variable_menu_index: popcorn
variable_menu_setting_beverage: 1
variable_menu_setting_dinner_plate: 9.0
variable_menu_setting_frozen_vegetable: 4.0
variable_menu_setting_pizza: 4.0
variable_menu_setting_popcorn: 1.75
variable_menu_setting_potato: 1
variable_power: PL10
variable_start_running: off
variable_time_cook_time: 00:05:00
variable_time_defrost: 00:00:01
variable_timer: 00:00:00
variable_weight_defrost: 4
variable_name: variable_power
actions: ['press_number_1_button', 'press_number_2_button', 'press_number_3_button', 'press_number_4_button', 'press_number_5_button', 'press_number_6_button', 'press_number_7_button', 'press_number_8_button', 'press_number_9_button', 'press_number_0_button']
astarsearch: <class 'AStarSearch'>
goal string: 7, goal variable value: PL7, variable_name: variable_power, feature name: set_microwave_cook_time_power
output actions list: ['press_number_7_button']
planning_result:  [('press_number_7_button', 1)]
feedbacks:  ["applied action: ('press_number_0_button', 2), feedback: {'feature': ('microwave_cook', 2), 'variable_microwave_cooking_time': '00:05:00'}", "applied action: ('press_power_button', 1), feedback: {'feature': ('microwave_cook', 3), 'variable_microwave_cooking_time': '00:05:00', 'variable_microwave_power_level': 'PL10'}", "applied action: ('press_number_7_button', 1), feedback: {'feature': ('microwave_cook', 4), 'variable_microwave_power_level': 'PL7', 'variable_start_running': 'off'}"]
check state....
Feedback Variable: 

 variable_microwave_power_level: pl7 


Comparison result: 

 reason = "The goal state requires 'variable_power' to be 'PL7'. The feedback shows 'variable_microwave_power_level' as 'pl7'. According to the rules, capitalization differences do not matter, and the values are semantically the same. Additionally, 'variable_power' and 'variable_microwave_power_level' represent the same item."
goal_reached = True 


goal state reached: True
step_info:  {'step': 5, 'actions': ['press_start_plus_30sec_button'], 'variable': 'variable_start_running', 'comment': 'value always set to on'}
executing action: ('press_start_plus_30sec_button', 1)
goal state string:  We want to have the variable: variable_start_running to have a value of on. 
goal_state_simulator: variable_child_lock: unlocked
variable_clock: 00:00:00
variable_menu_index: popcorn
variable_menu_setting_beverage: 1
variable_menu_setting_dinner_plate: 9.0
variable_menu_setting_frozen_vegetable: 4.0
variable_menu_setting_pizza: 4.0
variable_menu_setting_popcorn: 1.75
variable_menu_setting_potato: 1
variable_power: PL7
variable_start_running: on
variable_time_cook_time: 00:05:00
variable_time_defrost: 00:00:01
variable_timer: 00:00:00
variable_weight_defrost: 4
current_state_simulator: variable_child_lock: unlocked
variable_clock: 00:00:00
variable_menu_index: popcorn
variable_menu_setting_beverage: 1
variable_menu_setting_dinner_plate: 9.0
variable_menu_setting_frozen_vegetable: 4.0
variable_menu_setting_pizza: 4.0
variable_menu_setting_popcorn: 1.75
variable_menu_setting_potato: 1
variable_power: PL7
variable_start_running: on
variable_time_cook_time: 00:05:00
variable_time_defrost: 00:00:01
variable_timer: 00:00:00
variable_weight_defrost: 4
variable_name: variable_start_running
actions: ['press_start_plus_30sec_button']
astarsearch: <class 'AStarSearch'>
planning_result:  []
feedbacks:  ["applied action: ('press_power_button', 1), feedback: {'feature': ('microwave_cook', 3), 'variable_microwave_cooking_time': '00:05:00', 'variable_microwave_power_level': 'PL10'}", "applied action: ('press_number_7_button', 1), feedback: {'feature': ('microwave_cook', 4), 'variable_microwave_power_level': 'PL7', 'variable_start_running': 'off'}", "applied action: ('press_start_plus_30sec_button', 1), feedback: {'feature': ('microwave_cook', 5), 'variable_start_running': 'on', 'variable_microwave_power_level': 'PL7'}"]
check state....
Feedback Variable: 

 variable_start_running: on 


Comparison result: 

 reason = "The goal state requires 'variable_start_running' to have a value of 'on'. The feedback also shows 'variable_start_running' as 'on'. Based on Rule 1, the values match exactly, so the goal is achieved."
goal_reached = True 


goal state reached: True
ground truth info {'id': 3, 'command': 'Use time cooking setting to cook at 70% power for 5 minutes. Then start the appliance.', 'target_state': {'variable_clock': '00:00:00', 'variable_kitchen_timer': '00:00:00', 'variable_microwave_cooking_time': '05:00:00', 'variable_microwave_power_level': 'PL7', 'variable_weight_defrost': 0, 'variable_time_defrost': '00:00:00', 'variable_popcorn_setting': 1.75, 'variable_potato_setting': 1, 'variable_frozen_vegetable_setting': 4.0, 'variable_beverage_setting': 1, 'variable_dinner_plate_setting': 9.0, 'variable_pizza_setting': 4.0, 'variable_child_lock': 'unlocked', 'variable_start_running': 'on'}, 'important_target_states': {'variable_microwave_cooking_time': '00:05:00', 'variable_microwave_power_level': 'PL7', 'variable_start_running': 'on'}}
robot's decision {'variable_beverage_setting': '1', 'variable_child_lock': 'unlocked', 'variable_clock': '00:00:00', 'variable_dinner_plate_setting': '9.0', 'variable_frozen_vegetable_setting': '4.0', 'variable_kitchen_timer': '00:00:00', 'variable_microwave_cooking_time': '00:05:00', 'variable_microwave_power_level': 'PL7', 'variable_pizza_setting': '4.0', 'variable_popcorn_setting': '1.75', 'variable_potato_setting': '1', 'variable_start_running': 'on', 'variable_time_defrost': '00:00:00', 'variable_weight_defrost': 0}
